{"status":"unsafe","types":{"73":{"1":{"ann":"[GHC.Types.Int] -> [(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)]","ident":"Examples.Liquid.double","row":73,"col":1},"10":{"ann":"x1:[GHC.Types.Int] -> {v : [(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)] | len v == len x1}","ident":"lq_anf$##7205759403792811947","row":73,"col":10}},"61":{"13":{"ann":"GHC.Types.Int","ident":"hi","row":61,"col":13},"1":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> [{v : GHC.Types.Int | x1 <= v\n                                                              && v < x2}]","ident":"Examples.Liquid.range_LH","row":61,"col":1},"10":{"ann":"GHC.Types.Int","ident":"lo","row":61,"col":10}},"50":{"1":{"ann":"x1:{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Bool | v <=> x1 mod 2 == 0}","ident":"Examples.Liquid.isEven_LH","row":50,"col":1}},"44":{"1":{"ann":"{v : GHC.Types.Int | v mod 2 == 0}","ident":"Examples.Liquid.notEven_LH","row":44,"col":1}},"66":{"13":{"ann":"{v : GHC.Types.Int | v mod 2 == 0}","ident":"k","row":66,"col":13},"17":{"ann":"{VV : [{VV : GHC.Types.Int | VV mod 2 == 0}] | len VV <= len xs\n                                               && len VV >= 0}","ident":"lq_anf$##7205759403792811950","row":66,"col":17},"1":{"ann":"[{v : GHC.Types.Int | v mod 2 == 0}] -> {v : GHC.Types.Int | v mod 2 == 0} -> [{v : GHC.Types.Int | v mod 2 == 0}]","ident":"Examples.Liquid.shift_LH","row":66,"col":1},"18":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792811949","row":66,"col":18},"20":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":66,"col":20},"10":{"ann":"[{v : GHC.Types.Int | v mod 2 == 0}]","ident":"xs","row":66,"col":10}},"56":{"7":{"ann":"GHC.Types.Int","ident":"n","row":56,"col":7},"1":{"ann":"GHC.Types.Int -> [(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)]","ident":"Examples.Liquid.evens","row":56,"col":1},"23":{"ann":"{v : {v : GHC.Types.Int | v >= 0} -> [{v : GHC.Types.Int | v mod 2 == 0}] | v == Examples.Liquid.evens_LH}","ident":"_","row":56,"col":23},"11":{"ann":"GHC.Types.Int -> (Propositional.? GHC.Types.Int Examples.Liquid.IsEven)","ident":"lq_anf$##7205759403792811974","row":56,"col":11}},"71":{"19":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":71,"col":19},"17":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792811944","row":71,"col":17},"1":{"ann":"[{v : GHC.Types.Int | v >= 0}] -> [{v : GHC.Types.Int | v mod 2 == 0}]","ident":"Examples.Liquid.double_LH","row":71,"col":1},"16":{"ann":"{VV : [{VV : GHC.Types.Int | VV >= 0\n                             && VV mod 2 == 0}] | len VV <= len xs\n                                                  && len VV >= 0}","ident":"lq_anf$##7205759403792811945","row":71,"col":16},"11":{"ann":"[{v : GHC.Types.Int | v >= 0}]","ident":"xs","row":71,"col":11}},"68":{"7":{"ann":"[(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)]","ident":"xs","row":68,"col":7},"14":{"ann":"GHC.Types.Int -> (Propositional.? GHC.Types.Int Examples.Liquid.IsEven)","ident":"lq_anf$##7205759403792811951","row":68,"col":14},"36":{"ann":"(Propositional.? GHC.Types.Int Examples.Liquid.IsEven) -> GHC.Types.Int","ident":"lq_anf$##7205759403792811953","row":68,"col":36},"49":{"ann":"(The.The (Propositional.? GHC.Types.Int Examples.Liquid.IsEven) GHC.Types.Int)","ident":"lq_anf$##7205759403792811955","row":68,"col":49},"1":{"ann":"[(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)] -> (Propositional.? GHC.Types.Int Examples.Liquid.IsEven) -> [(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)]","ident":"Examples.Liquid.shift","row":68,"col":1},"26":{"ann":"{v : [{v : GHC.Types.Int | v mod 2 == 0}] -> {v : GHC.Types.Int | v mod 2 == 0} -> [{v : GHC.Types.Int | v mod 2 == 0}] | v == Examples.Liquid.shift_LH}","ident":"_","row":68,"col":26},"10":{"ann":"(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)","ident":"k","row":68,"col":10}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Examples.Liquid.$trModule","row":1,"col":1}},"62":{"22":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> [{v : GHC.Types.Int | x1 <= v\n                                                              && v < x2}]","ident":"Examples.Liquid.range_LH","row":62,"col":22},"34":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":62,"col":34},"5":{"ann":"{v : GHC.Types.Bool | v <=> lo < hi}","ident":"lq_anf$##7205759403792811958","row":62,"col":5},"8":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 < x2}","ident":"_","row":62,"col":8},"32":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792811961","row":62,"col":32}},"52":{"15":{"ann":"{v : x1:GHC.Types.Bool -> {v : GHC.Types.Bool | v <=> not x1} | v == GHC.Classes.not}","ident":"_","row":52,"col":15},"31":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792811966","row":52,"col":31},"20":{"ann":"x1:{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Bool | v <=> x1 mod 2 == 0}","ident":"Examples.Liquid.isEven_LH","row":52,"col":20},"32":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":52,"col":32}},"39":{"19":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":39,"col":19},"1":{"ann":"[{v : GHC.Types.Int | v mod 2 == 0}]","ident":"Examples.Liquid.weAreEven_LH","row":39,"col":1},"18":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792811978","row":39,"col":18},"26":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792811981","row":39,"col":26},"27":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":39,"col":27}},"46":{"1":{"ann":"(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)","ident":"Examples.Liquid.notEven","row":46,"col":1},"11":{"ann":"GHC.Types.Int -> (Propositional.? GHC.Types.Int Examples.Liquid.IsEven)","ident":"_","row":46,"col":11}},"41":{"13":{"ann":"GHC.Types.Int -> (Propositional.? GHC.Types.Int Examples.Liquid.IsEven)","ident":"lq_anf$##7205759403792811990","row":41,"col":13},"1":{"ann":"[(Propositional.? GHC.Types.Int Examples.Liquid.IsEven)]","ident":"Examples.Liquid.weAreEven","row":41,"col":1}},"55":{"14":{"ann":"{VV : [{VV : GHC.Types.Int | VV /= n\n                             && VV <= n\n                             && VV >= 0\n                             && VV < n\n                             && VV mod 2 == 0}] | len VV >= 0}","ident":"lq_anf$##7205759403792811971","row":55,"col":14},"1":{"ann":"{v : GHC.Types.Int | v >= 0} -> [{v : GHC.Types.Int | v mod 2 == 0}]","ident":"Examples.Liquid.evens_LH","row":55,"col":1},"38":{"ann":"{v : x1:{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Bool | v <=> x1 mod 2 == 0} | v == Examples.Liquid.isEven_LH}","ident":"_","row":55,"col":38},"24":{"ann":"{v : x1:GHC.Types.Int -> x2:GHC.Types.Int -> [{v : GHC.Types.Int | x1 <= v\n                                                                   && v < x2}] | v == Examples.Liquid.range_LH}","ident":"_","row":55,"col":24},"10":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"n","row":55,"col":10}}},"errors":[{"start":{"line":68,"column":49},"stop":{"line":68,"column":54},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : Int | v == ?a}\n \n  not a subtype of Required type\n    VV : {VV : Int | VV mod 2 == 0}\n \n  In Context\n    ?a : Int"},{"start":{"line":73,"column":10},"stop":{"line":73,"column":32},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int\n \n  not a subtype of Required type\n    VV : {VV : Int | VV >= 0}\n \n  In Context"},{"start":{"line":68,"column":36},"stop":{"line":68,"column":46},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : Int\n \n  not a subtype of Required type\n    VV : {VV : Int | VV mod 2 == 0}\n \n  In Context"},{"start":{"line":44,"column":1},"stop":{"line":44,"column":11},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : Int | v == (7 : int)}\n \n  not a subtype of Required type\n    VV : {VV : Int | VV mod 2 == 0}\n \n  In Context"},{"start":{"line":56,"column":23},"stop":{"line":56,"column":33},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : Int | v == n}\n \n  not a subtype of Required type\n    VV : {VV : Int | VV >= 0}\n \n  In Context\n    n : Int"}]}